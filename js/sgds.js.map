{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./sgds/fonts/sgds-icons.svg","webpack:///./sgds/fonts/sgds-icons.ttf","webpack:///./sgds/fonts/sgds-icons.woff","webpack:///./node_modules/sticky-sidebar/src/sticky-sidebar.js","webpack:///./sgds/js/lib.js","webpack:///./sgds/js/sgds.js","webpack:///./sgds/index.js","webpack:///./sgds/js/sgds-sidenav.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","StickySidebar","EVENT_KEY","DEFAULTS","topSpacing","bottomSpacing","containerSelector","innerWrapperSelector","stickyClass","resizeSensor","minWidth","[object Object]","sidebar","options","this","extend","document","querySelector","Error","sidebarInner","container","parentElement","affixedType","direction","support","transform","transform3d","_initialized","_reStyle","_breakpoint","_resizeListeners","dimensions","translateY","lastTopSpacing","lastBottomSpacing","sidebarHeight","sidebarWidth","containerTop","containerHeight","viewportHeight","viewportTop","lastViewportTop","forEach","method","initialize","_setSupportFeatures","wrapper","createElement","setAttribute","appendChild","firstChild","containers","querySelectorAll","Array","slice","item","contains","length","parseInt","_widthBreakpoint","calcDimensions","stickyPosition","bindEvents","window","addEventListener","passive","capture","ResizeSensor","handleEvent","event","updateSticky","dims","offsetRelative","top","clientHeight","containerBottom","offsetHeight","offsetWidth","innerHeight","_calcDimensionsWithScroll","sidebarLeft","left","documentElement","scrollTop","body","viewportBottom","viewportLeft","scrollLeft","furthest","Math","min","max","affixType","sidebarBottom","colliderTop","colliderBottom","isSidebarFitsViewport","style","inner","outer","position","width","bottom","translate","_getTranslate","height","force","getAffixType","_getStyle","affixEvent","toLowerCase","replace","eventTrigger","removeClass","addClass","_unit","affixedEvent","innerWidth","removeAttribute","_running","eventType","requestAnimationFrame","observeScrollDir","type","supportTransform","y","x","z","removeEventListener","caption","classList","remove","minHeight","styleReset","detach","result","upper","charAt","toUpperCase","join","split","undefined","element","eventName","data","CustomEvent","detail","e","createEvent","initCustomEvent","dispatchEvent","defaults","results","offsetTop","offsetLeft","isNaN","tagName","offsetParent","className","hasClass","add","RegExp","test","sticky_sidebar","jQuery","sgds","el","isVisible","display","getComputedStyle","currentStyle","j","len","option","opts","getAttribute","handler","eventListener","siblings","sibling","parentNode","nodeType","Node","ELEMENT_NODE","push","nextElementSibling","status","deleteBtn","deleteNotification","deletable","preventDefault","stopPropagation","removeChild","click","notification","target","backdrop","closeBtn","closeModal","modal","getElementById","unclick","closeByBackdrop","closeByButton","collapseMenu","active","actives","single","menu","nodeName","hide","$","ready","searchToggles","_loop","searchToggle","searchToggleTargetId","dataset","searchToggleTarget","concat","searchIcon","children","searchBarInput","find","toggleClass","focus","val","accordions","not","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop2","accordion","accordionHeader","accordionBody","header","attr","slideUp","slideDown","_iterator","iterator","next","done","err","on","otherHeadersInSet","parent","tabs","tabAnchors","_loop3","tabAnchor","tabTarget","tab","tabTargetToShow","show","parentListItemSiblings","getSiblings","listItem","itemTabAnchor","itemTabTarget","navbarBurgers","burger","targetMenuId","targetMenu","toggle","dropdowns","dropdown","$el","keyCode","sideNavContainer","sideNavMain","Number","topspacing","bottomspacing","secondLevelNavHeaderArray","index","navHeader","nextEl","navIcon","secondLevelNavHeaderMobileArray","closureIndex","secondLevelNavMobileIcon","getElementsByTagName","secondLevelMobileDiv","getElementsByClassName","secondLevelNavMobileClosure","initSecondLevelNavInteraction","notifications","getElements","parseOptions"],"mappings":"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","file":"js/sgds.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = __webpack_public_path__ + \"fonts/sgds-icons.svg\";","module.exports = __webpack_public_path__ + \"fonts/sgds-icons.ttf\";","module.exports = __webpack_public_path__ + \"fonts/sgds-icons.woff\";","/**\r\n * Sticky Sidebar JavaScript Plugin.\r\n * @version 3.3.1\r\n * @author Ahmed Bouhuolia <a.bouhuolia@gmail.com>\r\n * @license The MIT License (MIT)\r\n */\r\nconst StickySidebar = (() => {\r\n  \r\n    // ---------------------------------\r\n    // # Define Constants\r\n    // ---------------------------------\r\n    //\r\n    const EVENT_KEY = '.stickySidebar';\r\n    const VERSION   = '3.3.1';\r\n  \r\n    const DEFAULTS = {\r\n      \r\n      /**\r\n       * Additional top spacing of the element when it becomes sticky.\r\n       * @type {Numeric|Function}\r\n       */\r\n      topSpacing: 0,\r\n  \r\n      /**\r\n       * Additional bottom spacing of the element when it becomes sticky.\r\n       * @type {Numeric|Function}\r\n       */\r\n      bottomSpacing: 0,\r\n  \r\n      /**\r\n       * Container sidebar selector to know what the beginning and end of sticky element.\r\n       * @type {String|False}\r\n       */\r\n      containerSelector: false,\r\n  \r\n      /**\r\n       * Inner wrapper selector.\r\n       * @type {String}\r\n       */\r\n      innerWrapperSelector: '.inner-wrapper-sticky',\r\n  \r\n      /**\r\n       * The name of CSS class to apply to elements when they have become stuck.\r\n       * @type {String|False}\r\n       */\r\n      stickyClass: 'is-affixed',\r\n  \r\n      /**\r\n       * Detect when sidebar and its container change height so re-calculate their dimensions.\r\n       * @type {Boolean}\r\n       */\r\n      resizeSensor: true,\r\n  \r\n      /**\r\n       * The sidebar returns to its normal position if its width below this value.\r\n       * @type {Numeric}\r\n       */\r\n      minWidth: false\r\n    };\r\n  \r\n    // ---------------------------------\r\n    // # Class Definition\r\n    // ---------------------------------\r\n    //\r\n    /**\r\n     * Sticky Sidebar Class.\r\n     * @public\r\n     */\r\n    class StickySidebar{\r\n  \r\n      /**\r\n       * Sticky Sidebar Constructor.\r\n       * @constructor\r\n       * @param {HTMLElement|String} sidebar - The sidebar element or sidebar selector.\r\n       * @param {Object} options - The options of sticky sidebar.\r\n       */\r\n      constructor(sidebar, options = {}){\r\n        this.options = StickySidebar.extend(DEFAULTS, options);\r\n  \r\n        // Sidebar element query if there's no one, throw error.\r\n        this.sidebar = ('string' === typeof sidebar ) ? document.querySelector(sidebar) : sidebar;\r\n        if( 'undefined' === typeof this.sidebar )\r\n          throw new Error(\"There is no specific sidebar element.\");\r\n  \r\n        this.sidebarInner = false;\r\n        this.container = this.sidebar.parentElement;\r\n  \r\n        // Current Affix Type of sidebar element.\r\n        this.affixedType = 'STATIC';\r\n        this.direction = 'down';\r\n        this.support = {\r\n          transform:   false,\r\n          transform3d: false\r\n        };\r\n  \r\n        this._initialized = false;\r\n        this._reStyle = false;\r\n        this._breakpoint = false;\r\n        this._resizeListeners = [];\r\n        \r\n        // Dimensions of sidebar, container and screen viewport.\r\n        this.dimensions = {\r\n          translateY: 0,\r\n          topSpacing: 0,\r\n          lastTopSpacing: 0,\r\n          bottomSpacing: 0,\r\n          lastBottomSpacing: 0,\r\n          sidebarHeight: 0,\r\n          sidebarWidth: 0,\r\n          containerTop: 0,\r\n          containerHeight: 0,\r\n          viewportHeight: 0,\r\n          viewportTop: 0, \r\n          lastViewportTop: 0,\r\n        };\r\n  \r\n        // Bind event handlers for referencability.\r\n        ['handleEvent'].forEach( (method) => {\r\n          this[method] = this[method].bind(this);\r\n        });\r\n  \r\n        // Initialize sticky sidebar for first time.\r\n        this.initialize();\r\n      }\r\n  \r\n      /**\r\n       * Initializes the sticky sidebar by adding inner wrapper, define its container, \r\n       * min-width breakpoint, calculating dimensions, adding helper classes and inline style.\r\n       * @private\r\n       */\r\n      initialize(){\r\n        this._setSupportFeatures();\r\n  \r\n        // Get sticky sidebar inner wrapper, if not found, will create one.\r\n        if( this.options.innerWrapperSelector ){\r\n          this.sidebarInner = this.sidebar.querySelector(this.options.innerWrapperSelector);\r\n  \r\n          if( null === this.sidebarInner )\r\n            this.sidebarInner = false;\r\n        }\r\n        \r\n        if( ! this.sidebarInner ){\r\n          let wrapper = document.createElement('div');\r\n          wrapper.setAttribute('class', 'inner-wrapper-sticky');\r\n          this.sidebar.appendChild(wrapper);\r\n  \r\n          while( this.sidebar.firstChild != wrapper )\r\n            wrapper.appendChild(this.sidebar.firstChild);\r\n  \r\n          this.sidebarInner = this.sidebar.querySelector('.inner-wrapper-sticky');\r\n        }\r\n  \r\n        // Container wrapper of the sidebar.\r\n        if( this.options.containerSelector ){\r\n          let containers = document.querySelectorAll(this.options.containerSelector);\r\n          containers = Array.prototype.slice.call(containers);\r\n  \r\n          containers.forEach((container, item) => {\r\n            if( ! container.contains(this.sidebar) ) return;\r\n            this.container = container;\r\n          });\r\n  \r\n          if( ! containers.length )\r\n            throw new Error(\"The container does not contains on the sidebar.\");\r\n        }\r\n        \r\n        // If top/bottom spacing is not function parse value to integer.\r\n        if( 'function' !== typeof this.options.topSpacing )\r\n          this.options.topSpacing = parseInt(this.options.topSpacing) || 0;\r\n  \r\n        if( 'function' !== typeof this.options.bottomSpacing )\r\n          this.options.bottomSpacing = parseInt(this.options.bottomSpacing) || 0;\r\n            \r\n        // Breakdown sticky sidebar if screen width below `options.minWidth`.\r\n        this._widthBreakpoint();\r\n  \r\n        // Calculate dimensions of sidebar, container and viewport.\r\n        this.calcDimensions();\r\n  \r\n        // Affix sidebar in proper position.\r\n        this.stickyPosition();\r\n  \r\n        // Bind all events.\r\n        this.bindEvents();\r\n        \r\n        // Inform other properties the sticky sidebar is initialized.\r\n        this._initialized = true;\r\n      }\r\n  \r\n      /**\r\n       * Bind all events of sticky sidebar plugin.\r\n       * @protected\r\n       */\r\n      bindEvents(){\r\n        window.addEventListener('resize', this, {passive: true, capture: false});\r\n        window.addEventListener('scroll', this, {passive: true, capture: false});\r\n  \r\n        this.sidebar.addEventListener('update' + EVENT_KEY, this);\r\n  \r\n        if( this.options.resizeSensor && 'undefined' !== typeof ResizeSensor ){\r\n          new ResizeSensor(this.sidebarInner, this.handleEvent);\r\n          new ResizeSensor(this.container, this.handleEvent);\r\n        }\r\n      }\r\n  \r\n      /**\r\n       * Handles all events of the plugin.\r\n       * @param {Object} event - Event object passed from listener.\r\n       */\r\n      handleEvent(event){\r\n        this.updateSticky(event);\r\n      }\r\n  \r\n      /**\r\n       * Calculates dimensions of sidebar, container and screen viewpoint\r\n       * @public\r\n       */\r\n      calcDimensions(){\r\n        if( this._breakpoint ) return;\r\n        var dims = this.dimensions;\r\n  \r\n        // Container of sticky sidebar dimensions.\r\n        dims.containerTop    = StickySidebar.offsetRelative(this.container).top;\r\n        dims.containerHeight = this.container.clientHeight;\r\n        dims.containerBottom = dims.containerTop + dims.containerHeight;\r\n  \r\n        // Sidebar dimensions.\r\n        dims.sidebarHeight = this.sidebarInner.offsetHeight;\r\n        dims.sidebarWidth  = this.sidebar.offsetWidth;\r\n        \r\n        // Screen viewport dimensions.\r\n        dims.viewportHeight = window.innerHeight;\r\n  \r\n        this._calcDimensionsWithScroll();\r\n      }\r\n  \r\n      /**\r\n       * Some dimensions values need to be up-to-date when scrolling the page.\r\n       * @private\r\n       */\r\n      _calcDimensionsWithScroll(){\r\n        var dims = this.dimensions;\r\n  \r\n        dims.sidebarLeft = StickySidebar.offsetRelative(this.sidebar).left;\r\n  \r\n        dims.viewportTop    = document.documentElement.scrollTop || document.body.scrollTop;\r\n        dims.viewportBottom = dims.viewportTop + dims.viewportHeight;\r\n        dims.viewportLeft   = document.documentElement.scrollLeft || document.body.scrollLeft;\r\n  \r\n        dims.topSpacing    = this.options.topSpacing;\r\n        dims.bottomSpacing = this.options.bottomSpacing;\r\n  \r\n        if( 'function' === typeof dims.topSpacing )\r\n            dims.topSpacing = parseInt(dims.topSpacing(this.sidebar)) || 0;\r\n  \r\n        if( 'function' === typeof dims.bottomSpacing )\r\n            dims.bottomSpacing = parseInt(dims.bottomSpacing(this.sidebar)) || 0;\r\n        \r\n        if( 'VIEWPORT-TOP' === this.affixedType ){\r\n          // Adjust translate Y in the case decrease top spacing value.\r\n          if( dims.topSpacing < dims.lastTopSpacing ){\r\n            dims.translateY += dims.lastTopSpacing - dims.topSpacing;\r\n            this._reStyle = true; \r\n          }\r\n        \r\n        } else if( 'VIEWPORT-BOTTOM' === this.affixedType ){\r\n          // Adjust translate Y in the case decrease bottom spacing value.\r\n          if( dims.bottomSpacing < dims.lastBottomSpacing ){\r\n            dims.translateY += dims.lastBottomSpacing - dims.bottomSpacing;\r\n            this._reStyle = true;\r\n          }\r\n        }\r\n        \r\n        dims.lastTopSpacing    = dims.topSpacing;\r\n        dims.lastBottomSpacing = dims.bottomSpacing;\r\n      }\r\n      \r\n      /**\r\n       * Determine whether the sidebar is bigger than viewport.\r\n       * @public\r\n       * @return {Boolean}\r\n       */\r\n      isSidebarFitsViewport(){\r\n        return this.dimensions.sidebarHeight < this.dimensions.viewportHeight;\r\n      }\r\n  \r\n      /**\r\n       * Observe browser scrolling direction top and down.\r\n       */\r\n      observeScrollDir(){\r\n        var dims = this.dimensions;\r\n        if( dims.lastViewportTop === dims.viewportTop ) return;\r\n  \r\n        var furthest = 'down' === this.direction ? Math.min : Math.max;\r\n        \r\n        // If the browser is scrolling not in the same direction.\r\n        if( dims.viewportTop === furthest(dims.viewportTop, dims.lastViewportTop) )\r\n          this.direction = 'down' === this.direction ?  'up' : 'down';\r\n      }\r\n  \r\n      /**\r\n       * Gets affix type of sidebar according to current scrollTop and scrollLeft.\r\n       * Holds all logical affix of the sidebar when scrolling up and down and when sidebar \r\n       * is bigger than viewport and vice versa.\r\n       * @public\r\n       * @return {String|False} - Proper affix type.\r\n       */\r\n      getAffixType(){\r\n        var dims = this.dimensions, affixType = false;\r\n  \r\n        this._calcDimensionsWithScroll();\r\n  \r\n        var sidebarBottom = dims.sidebarHeight + dims.containerTop;\r\n        var colliderTop = dims.viewportTop + dims.topSpacing;\r\n        var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\r\n  \r\n        // When browser is scrolling top.\r\n        if( 'up' === this.direction ){\r\n          if( colliderTop <= dims.containerTop ){\r\n            dims.translateY = 0;\r\n            affixType = 'STATIC';\r\n  \r\n          } else if( colliderTop <= dims.translateY + dims.containerTop ){\r\n            dims.translateY = colliderTop - dims.containerTop;\r\n            affixType = 'VIEWPORT-TOP';\r\n  \r\n          } else if( ! this.isSidebarFitsViewport() && dims.containerTop <= colliderTop ){\r\n            affixType = 'VIEWPORT-UNBOTTOM';\r\n          }\r\n        // When browser is scrolling up.\r\n        } else {\r\n          // When sidebar element is not bigger than screen viewport.\r\n          if( this.isSidebarFitsViewport() ){\r\n  \r\n            if( dims.sidebarHeight + colliderTop >= dims.containerBottom ){\r\n              dims.translateY = dims.containerBottom - sidebarBottom;\r\n              affixType = 'CONTAINER-BOTTOM'; \r\n  \r\n            } else if( colliderTop >= dims.containerTop ){\r\n              dims.translateY = colliderTop - dims.containerTop;\r\n              affixType = 'VIEWPORT-TOP';\r\n            }\r\n          // When sidebar element is bigger than screen viewport.\r\n          } else {\r\n      \r\n            if( dims.containerBottom <= colliderBottom ){\r\n              dims.translateY = dims.containerBottom - sidebarBottom; \r\n              affixType = 'CONTAINER-BOTTOM';    \r\n  \r\n            } else if( sidebarBottom + dims.translateY <= colliderBottom ){\r\n              dims.translateY = colliderBottom - sidebarBottom;\r\n              affixType = 'VIEWPORT-BOTTOM';\r\n            \r\n            } else if( dims.containerTop + dims.translateY <= colliderTop ){\r\n              affixType = 'VIEWPORT-UNBOTTOM';\r\n            }\r\n          }\r\n        }\r\n  \r\n        // Make sure the translate Y is not bigger than container height.\r\n        dims.translateY = Math.max(0, dims.translateY);\r\n        dims.translateY = Math.min(dims.containerHeight, dims.translateY);\r\n  \r\n        dims.lastViewportTop = dims.viewportTop;\r\n        return affixType;\r\n      }\r\n  \r\n      /**\r\n       * Gets inline style of sticky sidebar wrapper and inner wrapper according \r\n       * to its affix type.\r\n       * @private\r\n       * @param {String} affixType - Affix type of sticky sidebar.\r\n       * @return {Object}\r\n       */\r\n      _getStyle(affixType){\r\n        if( 'undefined' === typeof affixType ) return;\r\n  \r\n        var style = {inner: {}, outer: {}};\r\n        var dims = this.dimensions;\r\n  \r\n        switch( affixType ){\r\n          case 'VIEWPORT-TOP':\r\n            style.inner = {position: 'fixed', top: dims.topSpacing,\r\n                  left: dims.sidebarLeft - dims.viewportLeft, width: dims.sidebarWidth};\r\n            break;\r\n          case 'VIEWPORT-BOTTOM':\r\n            style.inner = {position: 'fixed', top: 'auto', left: dims.sidebarLeft,\r\n                  bottom: dims.bottomSpacing, width: dims.sidebarWidth};\r\n            break;\r\n          case 'CONTAINER-BOTTOM':\r\n          case 'VIEWPORT-UNBOTTOM':\r\n            let translate = this._getTranslate(0, dims.translateY + 'px');\r\n            \r\n            if( translate )\r\n              style.inner = {transform: translate};\r\n            else \r\n              style.inner = {position: 'absolute', top: dims.translateY, width: dims.sidebarWidth};\r\n            break;\r\n        }\r\n        \r\n        switch( affixType ){\r\n          case 'VIEWPORT-TOP':\r\n          case 'VIEWPORT-BOTTOM':\r\n          case 'VIEWPORT-UNBOTTOM':\r\n          case 'CONTAINER-BOTTOM':\r\n            style.outer = {height: dims.sidebarHeight, position: 'relative'};\r\n            break;\r\n        }\r\n  \r\n        style.outer = StickySidebar.extend({height: '', position: ''}, style.outer);\r\n        style.inner = StickySidebar.extend({position: 'relative', top: '', left: '',\r\n            bottom: '', width: '',  transform: this._getTranslate()}, style.inner);\r\n  \r\n        return style;\r\n      }\r\n     \r\n      /**\r\n       * Cause the sidebar to be sticky according to affix type by adding inline\r\n       * style, adding helper class and trigger events.\r\n       * @function\r\n       * @protected\r\n       * @param {string} force - Update sticky sidebar position by force.\r\n       */\r\n      stickyPosition(force){\r\n        if( this._breakpoint ) return;\r\n  \r\n        force = this._reStyle || force || false;\r\n        \r\n        var offsetTop = this.options.topSpacing;\r\n        var offsetBottom = this.options.bottomSpacing;\r\n  \r\n        var affixType = this.getAffixType();\r\n        var style = this._getStyle(affixType);\r\n        \r\n        if( (this.affixedType != affixType || force) && affixType ){\r\n          let affixEvent = 'affix.' + affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\r\n          StickySidebar.eventTrigger(this.sidebar, affixEvent);\r\n  \r\n          if( 'STATIC' === affixType )\r\n            StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\r\n          else\r\n            StickySidebar.addClass(this.sidebar, this.options.stickyClass);\r\n          \r\n          for( let key in style.outer ){\r\n            let _unit = ('number' === typeof style.outer[key]) ? 'px' : '';\r\n            this.sidebar.style[key] = style.outer[key];\r\n          }\r\n  \r\n          for( let key in style.inner ){\r\n            let _unit = ('number' === typeof style.inner[key]) ? 'px' : '';\r\n            this.sidebarInner.style[key] = style.inner[key] + _unit;\r\n          }\r\n          \r\n          let affixedEvent = 'affixed.'+ affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\r\n          StickySidebar.eventTrigger(this.sidebar, affixedEvent);\r\n        } else {\r\n          if( this._initialized ) this.sidebarInner.style.left = style.inner.left;\r\n        }\r\n  \r\n        this.affixedType = affixType;\r\n      }\r\n  \r\n      /**\r\n       * Breakdown sticky sidebar when window width is below `options.minWidth` value.\r\n       * @protected\r\n       */\r\n      _widthBreakpoint(){\r\n  \r\n        if( window.innerWidth <= this.options.minWidth ){\r\n          this._breakpoint = true;\r\n          this.affixedType = 'STATIC';\r\n  \r\n          this.sidebar.removeAttribute('style');\r\n          StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\r\n          this.sidebarInner.removeAttribute('style');\r\n        } else {\r\n          this._breakpoint = false;\r\n        }\r\n      }\r\n  \r\n      /**\r\n       * Switches between functions stack for each event type, if there's no \r\n       * event, it will re-initialize sticky sidebar.\r\n       * @public\r\n       */\r\n      updateSticky(event = {}){\r\n        if( this._running ) return;\r\n        this._running = true;\r\n  \r\n        ((eventType) => {\r\n\r\n          requestAnimationFrame(() => {\r\n            switch( eventType ){\r\n              // When browser is scrolling and re-calculate just dimensions\r\n              // within scroll. \r\n              case 'scroll':\r\n                this._calcDimensionsWithScroll();\r\n                this.observeScrollDir();\r\n                this.stickyPosition();\r\n                break;\r\n  \r\n              // When browser is resizing or there's no event, observe width\r\n              // breakpoint and re-calculate dimensions.\r\n              case 'resize':\r\n              default: \r\n                this._widthBreakpoint();\r\n                this.calcDimensions();\r\n                this.stickyPosition(true);\r\n                break;\r\n            }\r\n            this._running = false;\r\n          });\r\n        })(event.type);\r\n      }\r\n  \r\n      /**\r\n       * Set browser support features to the public property.\r\n       * @private\r\n       */\r\n      _setSupportFeatures(){\r\n        var support = this.support;\r\n  \r\n        support.transform = StickySidebar.supportTransform();\r\n        support.transform3d = StickySidebar.supportTransform(true);\r\n      }\r\n  \r\n      /**\r\n       * Get translate value, if the browser supports transfrom3d, it will adopt it.\r\n       * and the same with translate. if browser doesn't support both return false.\r\n       * @param {Number} y - Value of Y-axis.\r\n       * @param {Number} x - Value of X-axis.\r\n       * @param {Number} z - Value of Z-axis.\r\n       * @return {String|False}\r\n       */\r\n      _getTranslate(y = 0, x = 0, z = 0){\r\n        if( this.support.transform3d ) return 'translate3d(' + y +', '+ x +', '+ z +')';\r\n        else if( this.support.translate ) return 'translate('+ y +', '+ x +')';\r\n        else return false;\r\n      }\r\n  \r\n      /**\r\n       * Destroy sticky sidebar plugin.\r\n       * @public\r\n       */\r\n      destroy(){\r\n        window.removeEventListener('resize', this, {caption: false});\r\n        window.removeEventListener('scroll', this, {caption: false});\r\n  \r\n        this.sidebar.classList.remove(this.options.stickyClass);\r\n        this.sidebar.style.minHeight = '';\r\n  \r\n        this.sidebar.removeEventListener('update' + EVENT_KEY, this);\r\n  \r\n        var styleReset = {inner: {}, outer: {}};\r\n  \r\n        styleReset.inner = {position: '', top: '', left: '', bottom: '', width: '',  transform: ''};\r\n        styleReset.outer = {height: '', position: ''};\r\n  \r\n        for( let key in styleReset.outer )\r\n          this.sidebar.style[key] = styleReset.outer[key];\r\n  \r\n        for( let key in styleReset.inner )\r\n          this.sidebarInner.style[key] = styleReset.inner[key];\r\n  \r\n        if( this.options.resizeSensor && 'undefined' !== typeof ResizeSensor ){\r\n          ResizeSensor.detach(this.sidebarInner, this.handleEvent);\r\n          ResizeSensor.detach(this.container, this.handleEvent);\r\n        }\r\n      }\r\n  \r\n      /**\r\n       * Determine if the browser supports CSS transform feature.\r\n       * @function\r\n       * @static\r\n       * @param {Boolean} transform3d - Detect transform with translate3d.\r\n       * @return {String}\r\n       */\r\n      static supportTransform(transform3d){\r\n        var result = false,\r\n            property = (transform3d) ? 'perspective' : 'transform',\r\n            upper = property.charAt(0).toUpperCase() + property.slice(1),\r\n            prefixes = ['Webkit', 'Moz', 'O', 'ms'],\r\n            support = document.createElement('support'),\r\n            style = support.style;\r\n  \r\n        (property + ' ' + prefixes.join(upper + ' ') + upper).split(' ').forEach(function(property, i) {\r\n          if (style[property] !== undefined) {\r\n            result = property;\r\n            return false;\r\n          }\r\n        });\r\n        return result;\r\n      }\r\n  \r\n      /**\r\n       * Trigger custom event.\r\n       * @static\r\n       * @param {DOMObject} element - Target element on the DOM.\r\n       * @param {String} eventName - Event name.\r\n       * @param {Object} data - \r\n       */\r\n      static eventTrigger(element, eventName, data){\r\n        try{\r\n          var event = new CustomEvent(eventName, {detail: data});\r\n        } catch(e){\r\n          var event = document.createEvent('CustomEvent');\r\n          event.initCustomEvent(eventName, true, true, data);\r\n        }\r\n        element.dispatchEvent(event);\r\n      }\r\n  \r\n      /**\r\n       * Extend options object with defaults.\r\n       * @function\r\n       * @static\r\n       */\r\n      static extend(defaults, options){\r\n        var results = {};\r\n        for( let key in defaults ){\r\n          if( 'undefined' !== typeof options[key] ) results[key] = options[key];\r\n          else results[key] = defaults[key];\r\n        }\r\n        return results;\r\n      }\r\n  \r\n      /**\r\n       * Get current coordinates left and top of specific element.\r\n       * @static\r\n       */\r\n      static offsetRelative(element){\r\n        var result = {left: 0, top: 0};\r\n\r\n        do{\r\n          let offsetTop = element.offsetTop;\r\n          let offsetLeft = element.offsetLeft;\r\n  \r\n          if( ! isNaN(offsetTop) )\r\n            result.top += offsetTop;\r\n  \r\n          if( ! isNaN(offsetLeft) )\r\n            result.left += offsetLeft;\r\n\r\n          element = ( 'BODY' === element.tagName ) ?\r\n                      element.parentElement : element.offsetParent;\r\n        } while(element)\r\n        return result;\r\n      }\r\n  \r\n      /**\r\n       * Add specific class name to specific element.\r\n       * @static \r\n       * @param {ObjectDOM} element \r\n       * @param {String} className \r\n       */\r\n      static addClass(element, className){\r\n        if( ! StickySidebar.hasClass(element, className) ){\r\n          if (element.classList)\r\n            element.classList.add(className);\r\n          else\r\n            element.className += ' ' + className;\r\n        }\r\n      }\r\n      \r\n      /**\r\n       * Remove specific class name to specific element\r\n       * @static\r\n       * @param {ObjectDOM} element \r\n       * @param {String} className \r\n       */\r\n      static removeClass(element, className){\r\n        if( StickySidebar.hasClass(element, className) ){\r\n          if (element.classList)\r\n            element.classList.remove(className);\r\n          else\r\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Determine weather the element has specific class name.\r\n       * @static\r\n       * @param {ObjectDOM} element \r\n       * @param {String} className \r\n       */\r\n      static hasClass(element, className){\r\n        if (element.classList)\r\n          return element.classList.contains(className);\r\n        else\r\n          return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\r\n      }\r\n    }\r\n  \r\n    return StickySidebar;\r\n  })();\r\n  \r\n  export default StickySidebar;\r\n  \r\n  // Global\r\n  // -------------------------\r\n  window.StickySidebar = StickySidebar;","const { jQuery } = window;\nif (!jQuery) {\n    throw new Error(\n        \"SGDS couldn't initialize; please make sure jQuery is loaded!\"\n    );\n}\nexport { jQuery };\n","const sgds = {};\nsgds.hide = function(el) {\n    let display;\n    display = sgds.isVisible(el);\n    if (display) {\n        el.style.display = \"none\";\n    }\n};\nsgds.show = function(el) {\n    let display;\n    display = sgds.isVisible(el);\n    if (!display) {\n        el.style.display = \"block\";\n    }\n};\nsgds.toggle = function(el) {\n    let display;\n    display = sgds.isVisible(el);\n    if (!display) {\n        el.style.display = \"block\";\n    } else {\n        el.style.display = \"none\";\n    }\n};\nsgds.getElements = function(name) {\n    return document.querySelectorAll('[data-sgds=\"' + name + '\"]');\n};\nsgds.isVisible = function(el) {\n    let display;\n    if (window.getComputedStyle) {\n        display = getComputedStyle(el, null).display;\n    } else {\n        display = el.currentStyle.display;\n    }\n    return display !== \"none\";\n};\nsgds.hasClass = function(el, className) {\n    if (el.classList) {\n        return el.classList.contains(className);\n    } else {\n        return new RegExp(\"\\\\b\" + className + \"\\\\b\").test(el.className);\n    }\n};\nsgds.addClass = function(el, className) {\n    if (el.classList) {\n        return el.classList.add(className);\n    } else if (!sgds.hasClass(el, className)) {\n        return (el.className += \" \" + className);\n    }\n};\nsgds.removeClass = function(el, className) {\n    if (el.classList) {\n        return el.classList.remove(className);\n    } else {\n        return (el.className = el.className.replace(\n            new RegExp(\"\\\\b\" + className + \"\\\\b\", \"g\"),\n            \"\"\n        ));\n    }\n};\nsgds.parseOptions = function(el) {\n    let j, len, option, options, opts;\n    opts = {};\n    options = el.getAttribute(\"data-options\");\n    options = (options || \"\").replace(/\\s/g, \"\").split(\";\");\n    for (j = 0, len = options.length; j < len; j++) {\n        option = options[j];\n        if (option) {\n            option = option.split(\":\");\n            opts[option[0]] = option[1];\n        }\n    }\n    return opts;\n};\nsgds.click = function(el, handler) {\n    if (!el.eventListener) {\n        el.eventListener = true;\n        return el.addEventListener(\"click\", handler);\n    }\n};\nsgds.unclick = function(el, handler) {\n    if (el.eventListener) {\n        el.eventListener = false;\n        return el.removeEventListener(\"click\", handler);\n    }\n};\nsgds.getSiblings = function(el) {\n\t// Setup siblings array and get the first sibling\n\tconst siblings = [];\n\tlet sibling = el.parentNode.firstChild;\n\n\t// Loop through each sibling and push to the array\n\twhile (sibling) {\n\t\tif (sibling.nodeType === Node.ELEMENT_NODE && sibling !== el) {\n\t\t\tsiblings.push(sibling);\n\t\t}\n\t\tsibling = sibling.nextElementSibling\n\t}\n\n\treturn siblings;\n};\n\nsgds.notification = function(el, status, options) {\n    var deleteBtn, deleteNotification;\n    if (options.deletable === void 0 || options.deletable !== false) {\n        deleteBtn = el.querySelector(\".delete\");\n        deleteNotification = function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            el.parentNode.removeChild(el);\n        };\n    }\n    if (status === \"show\") {\n        sgds.removeClass(el, \"is-hidden\");\n        sgds.click(deleteBtn, deleteNotification);\n    } else if (status === \"hide\") {\n        sgds.addClass(el, \"is-hidden\");\n    } else if (status === \"toggle\") {\n        if (sgds.isVisible(el)) {\n            sgds.notification(el, \"hide\", options);\n        } else {\n            sgds.notification(el, \"show\", options);\n        }\n        return;\n    }\n};\n\nsgds.toggleModal = function(el, options) {\n    if (!options.target) {\n        throw new Error(\"Found [sgds-MODAL] but there is no target defined!\");\n    }\n    el.addEventListener(\"click\", function(e) {\n        var backdrop, closeBtn, closeModal, modal;\n        e.preventDefault();\n        e.stopPropagation();\n        modal = document.getElementById(options.target);\n        backdrop = modal.querySelector(\".sgds-modal-background\");\n        closeBtn = modal.querySelector(\".sgds-modal-close\");\n        closeModal = function() {\n            if (sgds.hasClass(modal, \"is-active\")) {\n                sgds.removeClass(modal, \"is-active\");\n                return sgds.unclick(this, closeModal);\n            }\n        };\n        if (options.closeByBackdrop === void 0 || options.closeByBackdrop) {\n            sgds.click(backdrop, closeModal);\n        }\n        if (options.closeByButton === void 0 || options.closeByButton) {\n            sgds.click(closeBtn, closeModal);\n        }\n        sgds.addClass(modal, \"is-active\");\n    });\n};\n\nsgds.toggleMenu = function(el, options) {\n    sgds.collapseMenu(el, \"hide\");\n    sgds.click(el, function(e) {\n        var active, actives, i, len;\n        e.preventDefault();\n        e.stopPropagation();\n        if (options.single) {\n            actives = menu.querySelectorAll(\".is-active\");\n            for (i = 0, len = actives.length; i < len; i++) {\n                active = actives[i];\n                if (active !== e.target) {\n                    sgds.removeClass(active, \"is-active\");\n                    if (active.nextElementSibling.nodeName === \"UL\") {\n                        sgds.hide(active.nextElementSibling);\n                    }\n                }\n            }\n        }\n        sgds.collapseMenu(e.target, \"toggle\");\n    });\n};\n\nexport default sgds;","import StickySidebar from \"sticky-sidebar\";\nimport { jQuery as $ } from \"./js/lib\";\nimport sgds from \"./js/sgds\";\nimport { initSecondLevelNavInteraction } from \"./js/sgds-sidenav\";\nimport \"./sass/sgds.scss\";\nimport \"./fonts/sgds-icons.svg\";\nimport \"./fonts/sgds-icons.ttf\";\nimport \"./fonts/sgds-icons.woff\";\n\n$(document).ready(() => {\n    // Search bar toggle\n    const searchToggles = $(\".search-toggle\");\n    for (let i = 0; i < searchToggles.length; i++) {\n        let searchToggle = searchToggles[i];\n        let searchToggleTargetId = searchToggle.dataset.target;\n        let searchToggleTarget = $(`#${searchToggleTargetId}`);\n\n        let searchIcon = $(searchToggle).children(\"span\");\n        let searchBarInput = $(searchToggleTarget).find(\"input\");\n\n        $(searchToggle).click(() => {\n            $(searchIcon)\n                .toggleClass(\"sgds-icon-search\")\n                .toggleClass(\"sgds-icon-cross\");\n            $(searchToggleTarget).toggleClass(\"hide\");\n            $(searchBarInput)\n                .focus()\n                .val(\"\");\n        });\n    }\n\n    // Accordions, non-set\n    const accordions = $(\".sgds-accordion\").not(\".sgds-accordion-set > .sgds-accordion\");\n    if (accordions) {\n        for (let accordion of accordions) {\n            let accordionHeader = $(accordion).children(\".sgds-accordion-header\");\n            let accordionBody = $(accordion).children(\".sgds-accordion-body\");\n            $(accordionHeader).click(event => {\n                let header = $(event.target);\n                if ($(header).hasClass(\"is-active\")) {\n                    $(header)\n                        .removeClass(\"is-active\")\n                        .attr(\"aria-expanded\", false)\n                        .children(\"i\")\n                        .removeClass(\"sgds-icon-chevron-up\")\n                        .addClass(\"sgds-icon-chevron-down\");\n                    $(accordionBody).slideUp(300);\n                } else {\n                    $(header)\n                        .addClass(\"is-active\")\n                        .attr(\"aria-expanded\", true)\n                        .children(\"i\")\n                        .removeClass(\"sgds-icon-chevron-down\")\n                        .addClass(\"sgds-icon-chevron-up\");\n                    $(accordionBody).slideDown(300);\n                }\n            });\n        }\n    }\n\n    if ($(\".sgds-accordion-set > .sgds-accordion\").length) {\n        let headers = $(\".sgds-accordion-set .sgds-accordion-header\").get();\n        headers.forEach(header => {\n            $(header).on(\"click\", function() {\n                if ($(this).hasClass(\"is-active\")) {\n                    $(this)\n                        .removeClass(\"is-active\")\n                        .attr(\"aria-expanded\", false);\n                    $(this)\n                        .siblings(\".sgds-accordion-body\")\n                        .slideUp(300);\n                    $(this)\n                        .children(\"i\")\n                        .removeClass(\"sgds-icon-chevron-up\")\n                        .addClass(\"sgds-icon-chevron-down\");\n                } else {\n                    let otherHeadersInSet = $(this)\n                        .parent()\n                        .siblings(\".sgds-accordion\")\n                        .children(\".sgds-accordion-header\");\n                    if (otherHeadersInSet) {\n                        otherHeadersInSet\n                            .children(\"i\")\n                            .removeClass(\"sgds-icon-chevron-up\")\n                            .addClass(\"sgds-icon-chevron-down\");\n                        otherHeadersInSet.removeClass(\"is-active\");\n                        otherHeadersInSet\n                            .siblings(\".sgds-accordion-body\")\n                            .slideUp(300)\n                            .removeClass(\"is-open\");\n                    }\n\n                    $(this)\n                        .addClass(\"is-active\")\n                        .attr(\"aria-expanded\", true);\n                    $(this)\n                        .children(\"i\")\n                        .removeClass(\"sgds-icon-chevron-down\")\n                        .addClass(\"sgds-icon-chevron-up\");\n                    $(this)\n                        .siblings(\".sgds-accordion-body\")\n                        .slideDown(300)\n                        .addClass(\"is-open\");\n                }\n            });\n        });\n    }\n\n    // Tabs\n    const tabs = $(\".sgds-tabs\");\n    if (tabs && tabs.length > 0) {\n        for (let i = 0; i < tabs.length; i++) {\n            let tabElement = tabs[i];\n            let tabAnchors = tabElement.querySelectorAll(\"a[data-tab]\");\n\n            for (let j = 0; j < tabAnchors.length; j++) {\n                let tabAnchor = tabAnchors[j];\n                let tabTarget = document.querySelector(tabAnchor.dataset.tab);\n                if (!sgds.hasClass(tabAnchor.parentNode, \"is-active\")) {\n                    sgds.hide(tabTarget);\n                }\n                // Attach toggle listeners\n                tabAnchor.addEventListener(\"click\", event => {\n                    if (tabAnchor.parentElement.classList.contains(\"is-active\")) {\n                        return;\n                    }\n\n                    tabAnchor.parentElement.classList.add(\"is-active\");\n                    let tabTargetToShow = document.querySelector(tabAnchor.dataset.tab);\n                    sgds.show(tabTargetToShow);\n\n                    let parentListItemSiblings = sgds.getSiblings(tabAnchor.parentElement);\n                    if (parentListItemSiblings.length > 0) {\n                        parentListItemSiblings.forEach(listItem => {\n                            listItem.classList.remove(\"is-active\");\n                            let itemTabAnchor = listItem.querySelector(\"a[data-tab]\");\n                            let itemTabTarget = document.querySelector(itemTabAnchor.dataset.tab);\n                            sgds.hide(itemTabTarget);\n                        });\n                    }\n                });\n            }\n        }\n    }\n\n    // Navbar burger menus\n    const navbarBurgers = document.querySelectorAll(\".navbar-burger\");\n    if (navbarBurgers.length > 0) {\n        navbarBurgers.forEach(function(burger) {\n            burger.addEventListener(\"click\", function() {\n                const targetMenuId = burger.dataset.target;\n                const targetMenu = document.getElementById(targetMenuId);\n\n                // Toggle the class on both the \"navbar-burger\" and the \"navbar-menu\"\n                burger.classList.toggle(\"is-active\");\n                targetMenu.classList.toggle(\"is-active\");\n            });\n        });\n    }\n\n    // Dropdowns\n    const dropdowns = document.querySelectorAll(\".sgds-dropdown:not(.is-hoverable)\");\n    if (dropdowns.length > 0) {\n        dropdowns.forEach(dropdown => {\n            dropdown.addEventListener(\"click\", event => {\n                event.stopPropagation(); // Stop close listeners\n                dropdown.classList.toggle(\"is-active\");\n            });\n        });\n\n        document.addEventListener(\"click\", () => {\n            dropdowns.forEach(function($el) {\n                $el.classList.remove(\"is-active\");\n            });\n        });\n\n        // Close dropdowns if ESC pressed\n        document.addEventListener(\"keydown\", event => {\n            const e = event || window.event;\n            if (e.keyCode === 27) {\n                dropdowns.forEach(function($el) {\n                    $el.classList.remove(\"is-active\");\n                });\n            }\n        });\n    }\n\n    // Needs hierarchy: .sidenav-container > .sidenav > .sidebar__inner.sgds-menu\n    let sideNavContainer = document.querySelector(\".sidenav-container\");\n    if (sideNavContainer) {\n        let sideNavMain = sideNavContainer.querySelector(\".sidenav\");\n        if (sideNavMain) {\n            let sideNavMenuList = sideNavMain.querySelector(\".sidebar__inner.sgds-menu\");\n            if (sideNavMenuList) {\n                new StickySidebar(\".sidenav\", {\n                    containerSelector: \".sidenav-container\",\n                    innerWrapperSelector: \".sidebar__inner\",\n                    topSpacing: Number.parseInt(sideNavMain.dataset.topspacing),\n                    bottomSpacing: Number.parseInt(sideNavMain.dataset.bottomspacing)\n                });\n            }\n        }\n    }\n\n    if (document.querySelector(\"li.second-level-nav\")) {\n        initSecondLevelNavInteraction();\n    }\n\n    // Language Selector\n    if ($(\".language_selector\").length) {\n        var language_selector = $(\".language_selector\");\n        language_selector.click(function() {\n            $(\".language_selector--dropdown\").toggle();\n        });\n        $(\".language_selector--dropdown li\").click(function() {\n            $(\".language_selector--dropdown\").toggle();\n        });\n    }\n\n    // Notifications\n    let notifications = sgds.getElements(\"notification\");\n    if (notifications && notifications.length > 0) {\n        for (let i = 0, len = notifications.length; i < len; i++) {\n            notification = notifications[i];\n            options = sgds.parseOptions(notification);\n            sgds.notification(notification, \"hide\", options);\n        }\n    }\n});\n","export function initSecondLevelNavInteraction() {\n    let secondLevelNavHeaderArray = document.querySelectorAll(\n        \"li.second-level-nav\"\n    );\n    for (let index = 0; index < secondLevelNavHeaderArray.length; index++) {\n        // Check if next element is third-level-nav\n        let navHeader = secondLevelNavHeaderArray[index];\n        let nextEl = navHeader.nextElementSibling;\n        if (nextEl && nextEl.classList.contains(\"second-level-nav-div\")) {\n            navHeader.addEventListener(\"click\", event => {\n                let navIcon = navHeader.querySelector(\"i\");\n                if (nextEl.classList.contains(\"is-hidden\")) {\n                    nextEl.classList.remove(\"is-hidden\");\n                    if (navIcon) {\n                        navIcon.classList.remove(\"sgds-icon-chevron-down\");\n                        navIcon.classList.add(\"sgds-icon-chevron-up\");\n                    }\n                } else {\n                    nextEl.classList.add(\"is-hidden\");\n                    if (navIcon) {\n                        navIcon.classList.remove(\"sgds-icon-chevron-up\");\n                        navIcon.classList.add(\"sgds-icon-chevron-down\");\n                    }\n                }\n            });\n        }\n    }\n\n    var secondLevelNavHeaderMobileArray = document.querySelectorAll(\n        \"a.second-level-nav-header-mobile\"\n    );\n\n    for (\n        var index = 0;\n        index < secondLevelNavHeaderMobileArray.length;\n        index++\n    ) {\n        function secondLevelNavMobileClosure() {\n            var closureIndex = index;\n            function toggleSecondLevelNavMobileDiv() {\n                // Get the icon of the second-level-nav-header\n                var secondLevelNavMobileIcon = secondLevelNavHeaderMobileArray[\n                    closureIndex\n                ].getElementsByTagName(\"I\")[0];\n                var secondLevelMobileDiv = document.getElementsByClassName(\n                    \"second-level-nav-div-mobile\"\n                )[closureIndex];\n                if (secondLevelMobileDiv.classList.contains(\"is-hidden\")) {\n                    secondLevelNavMobileIcon.classList.remove(\n                        \"sgds-icon-chevron-down\"\n                    );\n                    secondLevelNavMobileIcon.classList.add(\n                        \"sgds-icon-chevron-up\"\n                    );\n                    secondLevelMobileDiv.classList.remove(\"is-hidden\");\n                } else {\n                    secondLevelMobileDiv.classList.add(\"is-hidden\");\n                    secondLevelNavMobileIcon.classList.remove(\n                        \"sgds-icon-chevron-up\"\n                    );\n                    secondLevelNavMobileIcon.classList.add(\n                        \"sgds-icon-chevron-down\"\n                    );\n                }\n            }\n            return toggleSecondLevelNavMobileDiv;\n        }\n\n        secondLevelNavHeaderMobileArray[index].addEventListener(\n            \"click\",\n            secondLevelNavMobileClosure()\n        );\n    }\n}\n"],"sourceRoot":""}