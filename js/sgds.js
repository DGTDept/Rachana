/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./sgds/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/sticky-sidebar/src/sticky-sidebar.js":
/*!***********************************************************!*\
  !*** ./node_modules/sticky-sidebar/src/sticky-sidebar.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\r\n * Sticky Sidebar JavaScript Plugin.\r\n * @version 3.3.1\r\n * @author Ahmed Bouhuolia <a.bouhuolia@gmail.com>\r\n * @license The MIT License (MIT)\r\n */\r\nconst StickySidebar = (() => {\r\n  \r\n    // ---------------------------------\r\n    // # Define Constants\r\n    // ---------------------------------\r\n    //\r\n    const EVENT_KEY = '.stickySidebar';\r\n    const VERSION   = '3.3.1';\r\n  \r\n    const DEFAULTS = {\r\n      \r\n      /**\r\n       * Additional top spacing of the element when it becomes sticky.\r\n       * @type {Numeric|Function}\r\n       */\r\n      topSpacing: 0,\r\n  \r\n      /**\r\n       * Additional bottom spacing of the element when it becomes sticky.\r\n       * @type {Numeric|Function}\r\n       */\r\n      bottomSpacing: 0,\r\n  \r\n      /**\r\n       * Container sidebar selector to know what the beginning and end of sticky element.\r\n       * @type {String|False}\r\n       */\r\n      containerSelector: false,\r\n  \r\n      /**\r\n       * Inner wrapper selector.\r\n       * @type {String}\r\n       */\r\n      innerWrapperSelector: '.inner-wrapper-sticky',\r\n  \r\n      /**\r\n       * The name of CSS class to apply to elements when they have become stuck.\r\n       * @type {String|False}\r\n       */\r\n      stickyClass: 'is-affixed',\r\n  \r\n      /**\r\n       * Detect when sidebar and its container change height so re-calculate their dimensions.\r\n       * @type {Boolean}\r\n       */\r\n      resizeSensor: true,\r\n  \r\n      /**\r\n       * The sidebar returns to its normal position if its width below this value.\r\n       * @type {Numeric}\r\n       */\r\n      minWidth: false\r\n    };\r\n  \r\n    // ---------------------------------\r\n    // # Class Definition\r\n    // ---------------------------------\r\n    //\r\n    /**\r\n     * Sticky Sidebar Class.\r\n     * @public\r\n     */\r\n    class StickySidebar{\r\n  \r\n      /**\r\n       * Sticky Sidebar Constructor.\r\n       * @constructor\r\n       * @param {HTMLElement|String} sidebar - The sidebar element or sidebar selector.\r\n       * @param {Object} options - The options of sticky sidebar.\r\n       */\r\n      constructor(sidebar, options = {}){\r\n        this.options = StickySidebar.extend(DEFAULTS, options);\r\n  \r\n        // Sidebar element query if there's no one, throw error.\r\n        this.sidebar = ('string' === typeof sidebar ) ? document.querySelector(sidebar) : sidebar;\r\n        if( 'undefined' === typeof this.sidebar )\r\n          throw new Error(\"There is no specific sidebar element.\");\r\n  \r\n        this.sidebarInner = false;\r\n        this.container = this.sidebar.parentElement;\r\n  \r\n        // Current Affix Type of sidebar element.\r\n        this.affixedType = 'STATIC';\r\n        this.direction = 'down';\r\n        this.support = {\r\n          transform:   false,\r\n          transform3d: false\r\n        };\r\n  \r\n        this._initialized = false;\r\n        this._reStyle = false;\r\n        this._breakpoint = false;\r\n        this._resizeListeners = [];\r\n        \r\n        // Dimensions of sidebar, container and screen viewport.\r\n        this.dimensions = {\r\n          translateY: 0,\r\n          topSpacing: 0,\r\n          lastTopSpacing: 0,\r\n          bottomSpacing: 0,\r\n          lastBottomSpacing: 0,\r\n          sidebarHeight: 0,\r\n          sidebarWidth: 0,\r\n          containerTop: 0,\r\n          containerHeight: 0,\r\n          viewportHeight: 0,\r\n          viewportTop: 0, \r\n          lastViewportTop: 0,\r\n        };\r\n  \r\n        // Bind event handlers for referencability.\r\n        ['handleEvent'].forEach( (method) => {\r\n          this[method] = this[method].bind(this);\r\n        });\r\n  \r\n        // Initialize sticky sidebar for first time.\r\n        this.initialize();\r\n      }\r\n  \r\n      /**\r\n       * Initializes the sticky sidebar by adding inner wrapper, define its container, \r\n       * min-width breakpoint, calculating dimensions, adding helper classes and inline style.\r\n       * @private\r\n       */\r\n      initialize(){\r\n        this._setSupportFeatures();\r\n  \r\n        // Get sticky sidebar inner wrapper, if not found, will create one.\r\n        if( this.options.innerWrapperSelector ){\r\n          this.sidebarInner = this.sidebar.querySelector(this.options.innerWrapperSelector);\r\n  \r\n          if( null === this.sidebarInner )\r\n            this.sidebarInner = false;\r\n        }\r\n        \r\n        if( ! this.sidebarInner ){\r\n          let wrapper = document.createElement('div');\r\n          wrapper.setAttribute('class', 'inner-wrapper-sticky');\r\n          this.sidebar.appendChild(wrapper);\r\n  \r\n          while( this.sidebar.firstChild != wrapper )\r\n            wrapper.appendChild(this.sidebar.firstChild);\r\n  \r\n          this.sidebarInner = this.sidebar.querySelector('.inner-wrapper-sticky');\r\n        }\r\n  \r\n        // Container wrapper of the sidebar.\r\n        if( this.options.containerSelector ){\r\n          let containers = document.querySelectorAll(this.options.containerSelector);\r\n          containers = Array.prototype.slice.call(containers);\r\n  \r\n          containers.forEach((container, item) => {\r\n            if( ! container.contains(this.sidebar) ) return;\r\n            this.container = container;\r\n          });\r\n  \r\n          if( ! containers.length )\r\n            throw new Error(\"The container does not contains on the sidebar.\");\r\n        }\r\n        \r\n        // If top/bottom spacing is not function parse value to integer.\r\n        if( 'function' !== typeof this.options.topSpacing )\r\n          this.options.topSpacing = parseInt(this.options.topSpacing) || 0;\r\n  \r\n        if( 'function' !== typeof this.options.bottomSpacing )\r\n          this.options.bottomSpacing = parseInt(this.options.bottomSpacing) || 0;\r\n            \r\n        // Breakdown sticky sidebar if screen width below `options.minWidth`.\r\n        this._widthBreakpoint();\r\n  \r\n        // Calculate dimensions of sidebar, container and viewport.\r\n        this.calcDimensions();\r\n  \r\n        // Affix sidebar in proper position.\r\n        this.stickyPosition();\r\n  \r\n        // Bind all events.\r\n        this.bindEvents();\r\n        \r\n        // Inform other properties the sticky sidebar is initialized.\r\n        this._initialized = true;\r\n      }\r\n  \r\n      /**\r\n       * Bind all events of sticky sidebar plugin.\r\n       * @protected\r\n       */\r\n      bindEvents(){\r\n        window.addEventListener('resize', this, {passive: true, capture: false});\r\n        window.addEventListener('scroll', this, {passive: true, capture: false});\r\n  \r\n        this.sidebar.addEventListener('update' + EVENT_KEY, this);\r\n  \r\n        if( this.options.resizeSensor && 'undefined' !== typeof ResizeSensor ){\r\n          new ResizeSensor(this.sidebarInner, this.handleEvent);\r\n          new ResizeSensor(this.container, this.handleEvent);\r\n        }\r\n      }\r\n  \r\n      /**\r\n       * Handles all events of the plugin.\r\n       * @param {Object} event - Event object passed from listener.\r\n       */\r\n      handleEvent(event){\r\n        this.updateSticky(event);\r\n      }\r\n  \r\n      /**\r\n       * Calculates dimensions of sidebar, container and screen viewpoint\r\n       * @public\r\n       */\r\n      calcDimensions(){\r\n        if( this._breakpoint ) return;\r\n        var dims = this.dimensions;\r\n  \r\n        // Container of sticky sidebar dimensions.\r\n        dims.containerTop    = StickySidebar.offsetRelative(this.container).top;\r\n        dims.containerHeight = this.container.clientHeight;\r\n        dims.containerBottom = dims.containerTop + dims.containerHeight;\r\n  \r\n        // Sidebar dimensions.\r\n        dims.sidebarHeight = this.sidebarInner.offsetHeight;\r\n        dims.sidebarWidth  = this.sidebar.offsetWidth;\r\n        \r\n        // Screen viewport dimensions.\r\n        dims.viewportHeight = window.innerHeight;\r\n  \r\n        this._calcDimensionsWithScroll();\r\n      }\r\n  \r\n      /**\r\n       * Some dimensions values need to be up-to-date when scrolling the page.\r\n       * @private\r\n       */\r\n      _calcDimensionsWithScroll(){\r\n        var dims = this.dimensions;\r\n  \r\n        dims.sidebarLeft = StickySidebar.offsetRelative(this.sidebar).left;\r\n  \r\n        dims.viewportTop    = document.documentElement.scrollTop || document.body.scrollTop;\r\n        dims.viewportBottom = dims.viewportTop + dims.viewportHeight;\r\n        dims.viewportLeft   = document.documentElement.scrollLeft || document.body.scrollLeft;\r\n  \r\n        dims.topSpacing    = this.options.topSpacing;\r\n        dims.bottomSpacing = this.options.bottomSpacing;\r\n  \r\n        if( 'function' === typeof dims.topSpacing )\r\n            dims.topSpacing = parseInt(dims.topSpacing(this.sidebar)) || 0;\r\n  \r\n        if( 'function' === typeof dims.bottomSpacing )\r\n            dims.bottomSpacing = parseInt(dims.bottomSpacing(this.sidebar)) || 0;\r\n        \r\n        if( 'VIEWPORT-TOP' === this.affixedType ){\r\n          // Adjust translate Y in the case decrease top spacing value.\r\n          if( dims.topSpacing < dims.lastTopSpacing ){\r\n            dims.translateY += dims.lastTopSpacing - dims.topSpacing;\r\n            this._reStyle = true; \r\n          }\r\n        \r\n        } else if( 'VIEWPORT-BOTTOM' === this.affixedType ){\r\n          // Adjust translate Y in the case decrease bottom spacing value.\r\n          if( dims.bottomSpacing < dims.lastBottomSpacing ){\r\n            dims.translateY += dims.lastBottomSpacing - dims.bottomSpacing;\r\n            this._reStyle = true;\r\n          }\r\n        }\r\n        \r\n        dims.lastTopSpacing    = dims.topSpacing;\r\n        dims.lastBottomSpacing = dims.bottomSpacing;\r\n      }\r\n      \r\n      /**\r\n       * Determine whether the sidebar is bigger than viewport.\r\n       * @public\r\n       * @return {Boolean}\r\n       */\r\n      isSidebarFitsViewport(){\r\n        return this.dimensions.sidebarHeight < this.dimensions.viewportHeight;\r\n      }\r\n  \r\n      /**\r\n       * Observe browser scrolling direction top and down.\r\n       */\r\n      observeScrollDir(){\r\n        var dims = this.dimensions;\r\n        if( dims.lastViewportTop === dims.viewportTop ) return;\r\n  \r\n        var furthest = 'down' === this.direction ? Math.min : Math.max;\r\n        \r\n        // If the browser is scrolling not in the same direction.\r\n        if( dims.viewportTop === furthest(dims.viewportTop, dims.lastViewportTop) )\r\n          this.direction = 'down' === this.direction ?  'up' : 'down';\r\n      }\r\n  \r\n      /**\r\n       * Gets affix type of sidebar according to current scrollTop and scrollLeft.\r\n       * Holds all logical affix of the sidebar when scrolling up and down and when sidebar \r\n       * is bigger than viewport and vice versa.\r\n       * @public\r\n       * @return {String|False} - Proper affix type.\r\n       */\r\n      getAffixType(){\r\n        var dims = this.dimensions, affixType = false;\r\n  \r\n        this._calcDimensionsWithScroll();\r\n  \r\n        var sidebarBottom = dims.sidebarHeight + dims.containerTop;\r\n        var colliderTop = dims.viewportTop + dims.topSpacing;\r\n        var colliderBottom = dims.viewportBottom - dims.bottomSpacing;\r\n  \r\n        // When browser is scrolling top.\r\n        if( 'up' === this.direction ){\r\n          if( colliderTop <= dims.containerTop ){\r\n            dims.translateY = 0;\r\n            affixType = 'STATIC';\r\n  \r\n          } else if( colliderTop <= dims.translateY + dims.containerTop ){\r\n            dims.translateY = colliderTop - dims.containerTop;\r\n            affixType = 'VIEWPORT-TOP';\r\n  \r\n          } else if( ! this.isSidebarFitsViewport() && dims.containerTop <= colliderTop ){\r\n            affixType = 'VIEWPORT-UNBOTTOM';\r\n          }\r\n        // When browser is scrolling up.\r\n        } else {\r\n          // When sidebar element is not bigger than screen viewport.\r\n          if( this.isSidebarFitsViewport() ){\r\n  \r\n            if( dims.sidebarHeight + colliderTop >= dims.containerBottom ){\r\n              dims.translateY = dims.containerBottom - sidebarBottom;\r\n              affixType = 'CONTAINER-BOTTOM'; \r\n  \r\n            } else if( colliderTop >= dims.containerTop ){\r\n              dims.translateY = colliderTop - dims.containerTop;\r\n              affixType = 'VIEWPORT-TOP';\r\n            }\r\n          // When sidebar element is bigger than screen viewport.\r\n          } else {\r\n      \r\n            if( dims.containerBottom <= colliderBottom ){\r\n              dims.translateY = dims.containerBottom - sidebarBottom; \r\n              affixType = 'CONTAINER-BOTTOM';    \r\n  \r\n            } else if( sidebarBottom + dims.translateY <= colliderBottom ){\r\n              dims.translateY = colliderBottom - sidebarBottom;\r\n              affixType = 'VIEWPORT-BOTTOM';\r\n            \r\n            } else if( dims.containerTop + dims.translateY <= colliderTop ){\r\n              affixType = 'VIEWPORT-UNBOTTOM';\r\n            }\r\n          }\r\n        }\r\n  \r\n        // Make sure the translate Y is not bigger than container height.\r\n        dims.translateY = Math.max(0, dims.translateY);\r\n        dims.translateY = Math.min(dims.containerHeight, dims.translateY);\r\n  \r\n        dims.lastViewportTop = dims.viewportTop;\r\n        return affixType;\r\n      }\r\n  \r\n      /**\r\n       * Gets inline style of sticky sidebar wrapper and inner wrapper according \r\n       * to its affix type.\r\n       * @private\r\n       * @param {String} affixType - Affix type of sticky sidebar.\r\n       * @return {Object}\r\n       */\r\n      _getStyle(affixType){\r\n        if( 'undefined' === typeof affixType ) return;\r\n  \r\n        var style = {inner: {}, outer: {}};\r\n        var dims = this.dimensions;\r\n  \r\n        switch( affixType ){\r\n          case 'VIEWPORT-TOP':\r\n            style.inner = {position: 'fixed', top: dims.topSpacing,\r\n                  left: dims.sidebarLeft - dims.viewportLeft, width: dims.sidebarWidth};\r\n            break;\r\n          case 'VIEWPORT-BOTTOM':\r\n            style.inner = {position: 'fixed', top: 'auto', left: dims.sidebarLeft,\r\n                  bottom: dims.bottomSpacing, width: dims.sidebarWidth};\r\n            break;\r\n          case 'CONTAINER-BOTTOM':\r\n          case 'VIEWPORT-UNBOTTOM':\r\n            let translate = this._getTranslate(0, dims.translateY + 'px');\r\n            \r\n            if( translate )\r\n              style.inner = {transform: translate};\r\n            else \r\n              style.inner = {position: 'absolute', top: dims.translateY, width: dims.sidebarWidth};\r\n            break;\r\n        }\r\n        \r\n        switch( affixType ){\r\n          case 'VIEWPORT-TOP':\r\n          case 'VIEWPORT-BOTTOM':\r\n          case 'VIEWPORT-UNBOTTOM':\r\n          case 'CONTAINER-BOTTOM':\r\n            style.outer = {height: dims.sidebarHeight, position: 'relative'};\r\n            break;\r\n        }\r\n  \r\n        style.outer = StickySidebar.extend({height: '', position: ''}, style.outer);\r\n        style.inner = StickySidebar.extend({position: 'relative', top: '', left: '',\r\n            bottom: '', width: '',  transform: this._getTranslate()}, style.inner);\r\n  \r\n        return style;\r\n      }\r\n     \r\n      /**\r\n       * Cause the sidebar to be sticky according to affix type by adding inline\r\n       * style, adding helper class and trigger events.\r\n       * @function\r\n       * @protected\r\n       * @param {string} force - Update sticky sidebar position by force.\r\n       */\r\n      stickyPosition(force){\r\n        if( this._breakpoint ) return;\r\n  \r\n        force = this._reStyle || force || false;\r\n        \r\n        var offsetTop = this.options.topSpacing;\r\n        var offsetBottom = this.options.bottomSpacing;\r\n  \r\n        var affixType = this.getAffixType();\r\n        var style = this._getStyle(affixType);\r\n        \r\n        if( (this.affixedType != affixType || force) && affixType ){\r\n          let affixEvent = 'affix.' + affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\r\n          StickySidebar.eventTrigger(this.sidebar, affixEvent);\r\n  \r\n          if( 'STATIC' === affixType )\r\n            StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\r\n          else\r\n            StickySidebar.addClass(this.sidebar, this.options.stickyClass);\r\n          \r\n          for( let key in style.outer ){\r\n            let _unit = ('number' === typeof style.outer[key]) ? 'px' : '';\r\n            this.sidebar.style[key] = style.outer[key];\r\n          }\r\n  \r\n          for( let key in style.inner ){\r\n            let _unit = ('number' === typeof style.inner[key]) ? 'px' : '';\r\n            this.sidebarInner.style[key] = style.inner[key] + _unit;\r\n          }\r\n          \r\n          let affixedEvent = 'affixed.'+ affixType.toLowerCase().replace('viewport-', '') + EVENT_KEY;\r\n          StickySidebar.eventTrigger(this.sidebar, affixedEvent);\r\n        } else {\r\n          if( this._initialized ) this.sidebarInner.style.left = style.inner.left;\r\n        }\r\n  \r\n        this.affixedType = affixType;\r\n      }\r\n  \r\n      /**\r\n       * Breakdown sticky sidebar when window width is below `options.minWidth` value.\r\n       * @protected\r\n       */\r\n      _widthBreakpoint(){\r\n  \r\n        if( window.innerWidth <= this.options.minWidth ){\r\n          this._breakpoint = true;\r\n          this.affixedType = 'STATIC';\r\n  \r\n          this.sidebar.removeAttribute('style');\r\n          StickySidebar.removeClass(this.sidebar, this.options.stickyClass);\r\n          this.sidebarInner.removeAttribute('style');\r\n        } else {\r\n          this._breakpoint = false;\r\n        }\r\n      }\r\n  \r\n      /**\r\n       * Switches between functions stack for each event type, if there's no \r\n       * event, it will re-initialize sticky sidebar.\r\n       * @public\r\n       */\r\n      updateSticky(event = {}){\r\n        if( this._running ) return;\r\n        this._running = true;\r\n  \r\n        ((eventType) => {\r\n\r\n          requestAnimationFrame(() => {\r\n            switch( eventType ){\r\n              // When browser is scrolling and re-calculate just dimensions\r\n              // within scroll. \r\n              case 'scroll':\r\n                this._calcDimensionsWithScroll();\r\n                this.observeScrollDir();\r\n                this.stickyPosition();\r\n                break;\r\n  \r\n              // When browser is resizing or there's no event, observe width\r\n              // breakpoint and re-calculate dimensions.\r\n              case 'resize':\r\n              default: \r\n                this._widthBreakpoint();\r\n                this.calcDimensions();\r\n                this.stickyPosition(true);\r\n                break;\r\n            }\r\n            this._running = false;\r\n          });\r\n        })(event.type);\r\n      }\r\n  \r\n      /**\r\n       * Set browser support features to the public property.\r\n       * @private\r\n       */\r\n      _setSupportFeatures(){\r\n        var support = this.support;\r\n  \r\n        support.transform = StickySidebar.supportTransform();\r\n        support.transform3d = StickySidebar.supportTransform(true);\r\n      }\r\n  \r\n      /**\r\n       * Get translate value, if the browser supports transfrom3d, it will adopt it.\r\n       * and the same with translate. if browser doesn't support both return false.\r\n       * @param {Number} y - Value of Y-axis.\r\n       * @param {Number} x - Value of X-axis.\r\n       * @param {Number} z - Value of Z-axis.\r\n       * @return {String|False}\r\n       */\r\n      _getTranslate(y = 0, x = 0, z = 0){\r\n        if( this.support.transform3d ) return 'translate3d(' + y +', '+ x +', '+ z +')';\r\n        else if( this.support.translate ) return 'translate('+ y +', '+ x +')';\r\n        else return false;\r\n      }\r\n  \r\n      /**\r\n       * Destroy sticky sidebar plugin.\r\n       * @public\r\n       */\r\n      destroy(){\r\n        window.removeEventListener('resize', this, {caption: false});\r\n        window.removeEventListener('scroll', this, {caption: false});\r\n  \r\n        this.sidebar.classList.remove(this.options.stickyClass);\r\n        this.sidebar.style.minHeight = '';\r\n  \r\n        this.sidebar.removeEventListener('update' + EVENT_KEY, this);\r\n  \r\n        var styleReset = {inner: {}, outer: {}};\r\n  \r\n        styleReset.inner = {position: '', top: '', left: '', bottom: '', width: '',  transform: ''};\r\n        styleReset.outer = {height: '', position: ''};\r\n  \r\n        for( let key in styleReset.outer )\r\n          this.sidebar.style[key] = styleReset.outer[key];\r\n  \r\n        for( let key in styleReset.inner )\r\n          this.sidebarInner.style[key] = styleReset.inner[key];\r\n  \r\n        if( this.options.resizeSensor && 'undefined' !== typeof ResizeSensor ){\r\n          ResizeSensor.detach(this.sidebarInner, this.handleEvent);\r\n          ResizeSensor.detach(this.container, this.handleEvent);\r\n        }\r\n      }\r\n  \r\n      /**\r\n       * Determine if the browser supports CSS transform feature.\r\n       * @function\r\n       * @static\r\n       * @param {Boolean} transform3d - Detect transform with translate3d.\r\n       * @return {String}\r\n       */\r\n      static supportTransform(transform3d){\r\n        var result = false,\r\n            property = (transform3d) ? 'perspective' : 'transform',\r\n            upper = property.charAt(0).toUpperCase() + property.slice(1),\r\n            prefixes = ['Webkit', 'Moz', 'O', 'ms'],\r\n            support = document.createElement('support'),\r\n            style = support.style;\r\n  \r\n        (property + ' ' + prefixes.join(upper + ' ') + upper).split(' ').forEach(function(property, i) {\r\n          if (style[property] !== undefined) {\r\n            result = property;\r\n            return false;\r\n          }\r\n        });\r\n        return result;\r\n      }\r\n  \r\n      /**\r\n       * Trigger custom event.\r\n       * @static\r\n       * @param {DOMObject} element - Target element on the DOM.\r\n       * @param {String} eventName - Event name.\r\n       * @param {Object} data - \r\n       */\r\n      static eventTrigger(element, eventName, data){\r\n        try{\r\n          var event = new CustomEvent(eventName, {detail: data});\r\n        } catch(e){\r\n          var event = document.createEvent('CustomEvent');\r\n          event.initCustomEvent(eventName, true, true, data);\r\n        }\r\n        element.dispatchEvent(event);\r\n      }\r\n  \r\n      /**\r\n       * Extend options object with defaults.\r\n       * @function\r\n       * @static\r\n       */\r\n      static extend(defaults, options){\r\n        var results = {};\r\n        for( let key in defaults ){\r\n          if( 'undefined' !== typeof options[key] ) results[key] = options[key];\r\n          else results[key] = defaults[key];\r\n        }\r\n        return results;\r\n      }\r\n  \r\n      /**\r\n       * Get current coordinates left and top of specific element.\r\n       * @static\r\n       */\r\n      static offsetRelative(element){\r\n        var result = {left: 0, top: 0};\r\n\r\n        do{\r\n          let offsetTop = element.offsetTop;\r\n          let offsetLeft = element.offsetLeft;\r\n  \r\n          if( ! isNaN(offsetTop) )\r\n            result.top += offsetTop;\r\n  \r\n          if( ! isNaN(offsetLeft) )\r\n            result.left += offsetLeft;\r\n\r\n          element = ( 'BODY' === element.tagName ) ?\r\n                      element.parentElement : element.offsetParent;\r\n        } while(element)\r\n        return result;\r\n      }\r\n  \r\n      /**\r\n       * Add specific class name to specific element.\r\n       * @static \r\n       * @param {ObjectDOM} element \r\n       * @param {String} className \r\n       */\r\n      static addClass(element, className){\r\n        if( ! StickySidebar.hasClass(element, className) ){\r\n          if (element.classList)\r\n            element.classList.add(className);\r\n          else\r\n            element.className += ' ' + className;\r\n        }\r\n      }\r\n      \r\n      /**\r\n       * Remove specific class name to specific element\r\n       * @static\r\n       * @param {ObjectDOM} element \r\n       * @param {String} className \r\n       */\r\n      static removeClass(element, className){\r\n        if( StickySidebar.hasClass(element, className) ){\r\n          if (element.classList)\r\n            element.classList.remove(className);\r\n          else\r\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Determine weather the element has specific class name.\r\n       * @static\r\n       * @param {ObjectDOM} element \r\n       * @param {String} className \r\n       */\r\n      static hasClass(element, className){\r\n        if (element.classList)\r\n          return element.classList.contains(className);\r\n        else\r\n          return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\r\n      }\r\n    }\r\n  \r\n    return StickySidebar;\r\n  })();\r\n  \r\n  /* harmony default export */ __webpack_exports__[\"default\"] = (StickySidebar);\r\n  \r\n  // Global\r\n  // -------------------------\r\n  window.StickySidebar = StickySidebar;\n\n//# sourceURL=webpack:///./node_modules/sticky-sidebar/src/sticky-sidebar.js?");

/***/ }),

/***/ "./sgds/fonts/sgds-icons.svg":
/*!***********************************!*\
  !*** ./sgds/fonts/sgds-icons.svg ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"fonts/sgds-icons.svg\";\n\n//# sourceURL=webpack:///./sgds/fonts/sgds-icons.svg?");

/***/ }),

/***/ "./sgds/fonts/sgds-icons.ttf":
/*!***********************************!*\
  !*** ./sgds/fonts/sgds-icons.ttf ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"fonts/sgds-icons.ttf\";\n\n//# sourceURL=webpack:///./sgds/fonts/sgds-icons.ttf?");

/***/ }),

/***/ "./sgds/fonts/sgds-icons.woff":
/*!************************************!*\
  !*** ./sgds/fonts/sgds-icons.woff ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"fonts/sgds-icons.woff\";\n\n//# sourceURL=webpack:///./sgds/fonts/sgds-icons.woff?");

/***/ }),

/***/ "./sgds/index.js":
/*!***********************!*\
  !*** ./sgds/index.js ***!
  \***********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var sticky_sidebar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sticky-sidebar */ \"./node_modules/sticky-sidebar/src/sticky-sidebar.js\");\n/* harmony import */ var _js_lib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js/lib */ \"./sgds/js/lib.js\");\n/* harmony import */ var _js_sgds__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js/sgds */ \"./sgds/js/sgds.js\");\n/* harmony import */ var _js_sgds_sidenav__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js/sgds-sidenav */ \"./sgds/js/sgds-sidenav.js\");\n/* harmony import */ var _sass_sgds_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sass/sgds.scss */ \"./sgds/sass/sgds.scss\");\n/* harmony import */ var _sass_sgds_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_sass_sgds_scss__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _fonts_sgds_icons_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fonts/sgds-icons.svg */ \"./sgds/fonts/sgds-icons.svg\");\n/* harmony import */ var _fonts_sgds_icons_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_fonts_sgds_icons_svg__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _fonts_sgds_icons_ttf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fonts/sgds-icons.ttf */ \"./sgds/fonts/sgds-icons.ttf\");\n/* harmony import */ var _fonts_sgds_icons_ttf__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_fonts_sgds_icons_ttf__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _fonts_sgds_icons_woff__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./fonts/sgds-icons.woff */ \"./sgds/fonts/sgds-icons.woff\");\n/* harmony import */ var _fonts_sgds_icons_woff__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_fonts_sgds_icons_woff__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n\nObject(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(document).ready(function () {\n  // Search bar toggle\n  var searchToggles = Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(\".search-toggle\");\n\n  var _loop = function _loop(i) {\n    var searchToggle = searchToggles[i];\n    var searchToggleTargetId = searchToggle.dataset.target;\n    var searchToggleTarget = Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(\"#\".concat(searchToggleTargetId));\n    var searchIcon = Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(searchToggle).children(\"span\");\n    var searchBarInput = Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(searchToggleTarget).find(\"input\");\n    Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(searchToggle).click(function () {\n      Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(searchIcon).toggleClass(\"sgds-icon-search\").toggleClass(\"sgds-icon-cross\");\n      Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(searchToggleTarget).toggleClass(\"hide\");\n      Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(searchBarInput).focus().val(\"\");\n    });\n  };\n\n  for (var i = 0; i < searchToggles.length; i++) {\n    _loop(i);\n  } // Accordions, non-set\n\n\n  var accordions = Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(\".sgds-accordion\").not(\".sgds-accordion-set > .sgds-accordion\");\n\n  if (accordions) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      var _loop2 = function _loop2() {\n        var accordion = _step.value;\n        var accordionHeader = Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(accordion).children(\".sgds-accordion-header\");\n        var accordionBody = Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(accordion).children(\".sgds-accordion-body\");\n        Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(accordionHeader).click(function (event) {\n          var header = Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(event.target);\n\n          if (Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(header).hasClass(\"is-active\")) {\n            Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(header).removeClass(\"is-active\").attr(\"aria-expanded\", false).children(\"i\").removeClass(\"sgds-icon-chevron-up\").addClass(\"sgds-icon-chevron-down\");\n            Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(accordionBody).slideUp(300);\n          } else {\n            Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(header).addClass(\"is-active\").attr(\"aria-expanded\", true).children(\"i\").removeClass(\"sgds-icon-chevron-down\").addClass(\"sgds-icon-chevron-up\");\n            Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(accordionBody).slideDown(300);\n          }\n        });\n      };\n\n      for (var _iterator = accordions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        _loop2();\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  if (Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(\".sgds-accordion-set > .sgds-accordion\").length) {\n    var headers = Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(\".sgds-accordion-set .sgds-accordion-header\").get();\n    headers.forEach(function (header) {\n      Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(header).on(\"click\", function () {\n        if (Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(this).hasClass(\"is-active\")) {\n          Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(this).removeClass(\"is-active\").attr(\"aria-expanded\", false);\n          Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(this).siblings(\".sgds-accordion-body\").slideUp(300);\n          Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(this).children(\"i\").removeClass(\"sgds-icon-chevron-up\").addClass(\"sgds-icon-chevron-down\");\n        } else {\n          var otherHeadersInSet = Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(this).parent().siblings(\".sgds-accordion\").children(\".sgds-accordion-header\");\n\n          if (otherHeadersInSet) {\n            otherHeadersInSet.children(\"i\").removeClass(\"sgds-icon-chevron-up\").addClass(\"sgds-icon-chevron-down\");\n            otherHeadersInSet.removeClass(\"is-active\");\n            otherHeadersInSet.siblings(\".sgds-accordion-body\").slideUp(300).removeClass(\"is-open\");\n          }\n\n          Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(this).addClass(\"is-active\").attr(\"aria-expanded\", true);\n          Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(this).children(\"i\").removeClass(\"sgds-icon-chevron-down\").addClass(\"sgds-icon-chevron-up\");\n          Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(this).siblings(\".sgds-accordion-body\").slideDown(300).addClass(\"is-open\");\n        }\n      });\n    });\n  } // Tabs\n\n\n  var tabs = Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(\".sgds-tabs\");\n\n  if (tabs && tabs.length > 0) {\n    for (var i = 0; i < tabs.length; i++) {\n      var tabElement = tabs[i];\n      var tabAnchors = tabElement.querySelectorAll(\"a[data-tab]\");\n\n      var _loop3 = function _loop3(j) {\n        var tabAnchor = tabAnchors[j];\n        var tabTarget = document.querySelector(tabAnchor.dataset.tab);\n\n        if (!_js_sgds__WEBPACK_IMPORTED_MODULE_2__[\"default\"].hasClass(tabAnchor.parentNode, \"is-active\")) {\n          _js_sgds__WEBPACK_IMPORTED_MODULE_2__[\"default\"].hide(tabTarget);\n        } // Attach toggle listeners\n\n\n        tabAnchor.addEventListener(\"click\", function (event) {\n          if (tabAnchor.parentElement.classList.contains(\"is-active\")) {\n            return;\n          }\n\n          tabAnchor.parentElement.classList.add(\"is-active\");\n          var tabTargetToShow = document.querySelector(tabAnchor.dataset.tab);\n          _js_sgds__WEBPACK_IMPORTED_MODULE_2__[\"default\"].show(tabTargetToShow);\n          var parentListItemSiblings = _js_sgds__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getSiblings(tabAnchor.parentElement);\n\n          if (parentListItemSiblings.length > 0) {\n            parentListItemSiblings.forEach(function (listItem) {\n              listItem.classList.remove(\"is-active\");\n              var itemTabAnchor = listItem.querySelector(\"a[data-tab]\");\n              var itemTabTarget = document.querySelector(itemTabAnchor.dataset.tab);\n              _js_sgds__WEBPACK_IMPORTED_MODULE_2__[\"default\"].hide(itemTabTarget);\n            });\n          }\n        });\n      };\n\n      for (var j = 0; j < tabAnchors.length; j++) {\n        _loop3(j);\n      }\n    }\n  } // Navbar burger menus\n\n\n  var navbarBurgers = document.querySelectorAll(\".navbar-burger\");\n\n  if (navbarBurgers.length > 0) {\n    navbarBurgers.forEach(function (burger) {\n      burger.addEventListener(\"click\", function () {\n        var targetMenuId = burger.dataset.target;\n        var targetMenu = document.getElementById(targetMenuId); // Toggle the class on both the \"navbar-burger\" and the \"navbar-menu\"\n\n        burger.classList.toggle(\"is-active\");\n        targetMenu.classList.toggle(\"is-active\");\n      });\n    });\n  } // Dropdowns\n\n\n  var dropdowns = document.querySelectorAll(\".sgds-dropdown:not(.is-hoverable)\");\n\n  if (dropdowns.length > 0) {\n    dropdowns.forEach(function (dropdown) {\n      dropdown.addEventListener(\"click\", function (event) {\n        event.stopPropagation(); // Stop close listeners\n\n        dropdown.classList.toggle(\"is-active\");\n      });\n    });\n    document.addEventListener(\"click\", function () {\n      dropdowns.forEach(function ($el) {\n        $el.classList.remove(\"is-active\");\n      });\n    }); // Close dropdowns if ESC pressed\n\n    document.addEventListener(\"keydown\", function (event) {\n      var e = event || window.event;\n\n      if (e.keyCode === 27) {\n        dropdowns.forEach(function ($el) {\n          $el.classList.remove(\"is-active\");\n        });\n      }\n    });\n  } // Needs hierarchy: .sidenav-container > .sidenav > .sidebar__inner.sgds-menu\n\n\n  var sideNavContainer = document.querySelector(\".sidenav-container\");\n\n  if (sideNavContainer) {\n    var sideNavMain = sideNavContainer.querySelector(\".sidenav\");\n\n    if (sideNavMain) {\n      var sideNavMenuList = sideNavMain.querySelector(\".sidebar__inner.sgds-menu\");\n\n      if (sideNavMenuList) {\n        new sticky_sidebar__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\".sidenav\", {\n          containerSelector: \".sidenav-container\",\n          innerWrapperSelector: \".sidebar__inner\",\n          topSpacing: Number.parseInt(sideNavMain.dataset.topspacing),\n          bottomSpacing: Number.parseInt(sideNavMain.dataset.bottomspacing)\n        });\n      }\n    }\n  }\n\n  if (document.querySelector(\"li.second-level-nav\")) {\n    Object(_js_sgds_sidenav__WEBPACK_IMPORTED_MODULE_3__[\"initSecondLevelNavInteraction\"])();\n  } // Language Selector\n\n\n  if (Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(\".language_selector\").length) {\n    var language_selector = Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(\".language_selector\");\n    language_selector.click(function () {\n      Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(\".language_selector--dropdown\").toggle();\n    });\n    Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(\".language_selector--dropdown li\").click(function () {\n      Object(_js_lib__WEBPACK_IMPORTED_MODULE_1__[\"jQuery\"])(\".language_selector--dropdown\").toggle();\n    });\n  } // Notifications\n\n\n  var notifications = _js_sgds__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getElements(\"notification\");\n\n  if (notifications && notifications.length > 0) {\n    for (var _i = 0, len = notifications.length; _i < len; _i++) {\n      notification = notifications[_i];\n      options = _js_sgds__WEBPACK_IMPORTED_MODULE_2__[\"default\"].parseOptions(notification);\n      _js_sgds__WEBPACK_IMPORTED_MODULE_2__[\"default\"].notification(notification, \"hide\", options);\n    }\n  }\n});\n\n//# sourceURL=webpack:///./sgds/index.js?");

/***/ }),

/***/ "./sgds/js/lib.js":
/*!************************!*\
  !*** ./sgds/js/lib.js ***!
  \************************/
/*! exports provided: jQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"jQuery\", function() { return jQuery; });\nvar _window = window,\n    jQuery = _window.jQuery;\n\nif (!jQuery) {\n  throw new Error(\"SGDS couldn't initialize; please make sure jQuery is loaded!\");\n}\n\n\n\n//# sourceURL=webpack:///./sgds/js/lib.js?");

/***/ }),

/***/ "./sgds/js/sgds-sidenav.js":
/*!*********************************!*\
  !*** ./sgds/js/sgds-sidenav.js ***!
  \*********************************/
/*! exports provided: initSecondLevelNavInteraction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initSecondLevelNavInteraction\", function() { return initSecondLevelNavInteraction; });\nfunction initSecondLevelNavInteraction() {\n  var secondLevelNavHeaderArray = document.querySelectorAll(\"li.second-level-nav\");\n\n  var _loop = function _loop(_index) {\n    // Check if next element is third-level-nav\n    var navHeader = secondLevelNavHeaderArray[_index];\n    var nextEl = navHeader.nextElementSibling;\n\n    if (nextEl && nextEl.classList.contains(\"second-level-nav-div\")) {\n      navHeader.addEventListener(\"click\", function (event) {\n        var navIcon = navHeader.querySelector(\"i\");\n\n        if (nextEl.classList.contains(\"is-hidden\")) {\n          nextEl.classList.remove(\"is-hidden\");\n\n          if (navIcon) {\n            navIcon.classList.remove(\"sgds-icon-chevron-down\");\n            navIcon.classList.add(\"sgds-icon-chevron-up\");\n          }\n        } else {\n          nextEl.classList.add(\"is-hidden\");\n\n          if (navIcon) {\n            navIcon.classList.remove(\"sgds-icon-chevron-up\");\n            navIcon.classList.add(\"sgds-icon-chevron-down\");\n          }\n        }\n      });\n    }\n  };\n\n  for (var _index = 0; _index < secondLevelNavHeaderArray.length; _index++) {\n    _loop(_index);\n  }\n\n  var secondLevelNavHeaderMobileArray = document.querySelectorAll(\"a.second-level-nav-header-mobile\");\n\n  for (var index = 0; index < secondLevelNavHeaderMobileArray.length; index++) {\n    var secondLevelNavMobileClosure = function secondLevelNavMobileClosure() {\n      var closureIndex = index;\n\n      function toggleSecondLevelNavMobileDiv() {\n        // Get the icon of the second-level-nav-header\n        var secondLevelNavMobileIcon = secondLevelNavHeaderMobileArray[closureIndex].getElementsByTagName(\"I\")[0];\n        var secondLevelMobileDiv = document.getElementsByClassName(\"second-level-nav-div-mobile\")[closureIndex];\n\n        if (secondLevelMobileDiv.classList.contains(\"is-hidden\")) {\n          secondLevelNavMobileIcon.classList.remove(\"sgds-icon-chevron-down\");\n          secondLevelNavMobileIcon.classList.add(\"sgds-icon-chevron-up\");\n          secondLevelMobileDiv.classList.remove(\"is-hidden\");\n        } else {\n          secondLevelMobileDiv.classList.add(\"is-hidden\");\n          secondLevelNavMobileIcon.classList.remove(\"sgds-icon-chevron-up\");\n          secondLevelNavMobileIcon.classList.add(\"sgds-icon-chevron-down\");\n        }\n      }\n\n      return toggleSecondLevelNavMobileDiv;\n    };\n\n    secondLevelNavHeaderMobileArray[index].addEventListener(\"click\", secondLevelNavMobileClosure());\n  }\n}\n\n//# sourceURL=webpack:///./sgds/js/sgds-sidenav.js?");

/***/ }),

/***/ "./sgds/js/sgds.js":
/*!*************************!*\
  !*** ./sgds/js/sgds.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar sgds = {};\n\nsgds.hide = function (el) {\n  var display;\n  display = sgds.isVisible(el);\n\n  if (display) {\n    el.style.display = \"none\";\n  }\n};\n\nsgds.show = function (el) {\n  var display;\n  display = sgds.isVisible(el);\n\n  if (!display) {\n    el.style.display = \"block\";\n  }\n};\n\nsgds.toggle = function (el) {\n  var display;\n  display = sgds.isVisible(el);\n\n  if (!display) {\n    el.style.display = \"block\";\n  } else {\n    el.style.display = \"none\";\n  }\n};\n\nsgds.getElements = function (name) {\n  return document.querySelectorAll('[data-sgds=\"' + name + '\"]');\n};\n\nsgds.isVisible = function (el) {\n  var display;\n\n  if (window.getComputedStyle) {\n    display = getComputedStyle(el, null).display;\n  } else {\n    display = el.currentStyle.display;\n  }\n\n  return display !== \"none\";\n};\n\nsgds.hasClass = function (el, className) {\n  if (el.classList) {\n    return el.classList.contains(className);\n  } else {\n    return new RegExp(\"\\\\b\" + className + \"\\\\b\").test(el.className);\n  }\n};\n\nsgds.addClass = function (el, className) {\n  if (el.classList) {\n    return el.classList.add(className);\n  } else if (!sgds.hasClass(el, className)) {\n    return el.className += \" \" + className;\n  }\n};\n\nsgds.removeClass = function (el, className) {\n  if (el.classList) {\n    return el.classList.remove(className);\n  } else {\n    return el.className = el.className.replace(new RegExp(\"\\\\b\" + className + \"\\\\b\", \"g\"), \"\");\n  }\n};\n\nsgds.parseOptions = function (el) {\n  var j, len, option, options, opts;\n  opts = {};\n  options = el.getAttribute(\"data-options\");\n  options = (options || \"\").replace(/\\s/g, \"\").split(\";\");\n\n  for (j = 0, len = options.length; j < len; j++) {\n    option = options[j];\n\n    if (option) {\n      option = option.split(\":\");\n      opts[option[0]] = option[1];\n    }\n  }\n\n  return opts;\n};\n\nsgds.click = function (el, handler) {\n  if (!el.eventListener) {\n    el.eventListener = true;\n    return el.addEventListener(\"click\", handler);\n  }\n};\n\nsgds.unclick = function (el, handler) {\n  if (el.eventListener) {\n    el.eventListener = false;\n    return el.removeEventListener(\"click\", handler);\n  }\n};\n\nsgds.getSiblings = function (el) {\n  // Setup siblings array and get the first sibling\n  var siblings = [];\n  var sibling = el.parentNode.firstChild; // Loop through each sibling and push to the array\n\n  while (sibling) {\n    if (sibling.nodeType === Node.ELEMENT_NODE && sibling !== el) {\n      siblings.push(sibling);\n    }\n\n    sibling = sibling.nextElementSibling;\n  }\n\n  return siblings;\n};\n\nsgds.notification = function (el, status, options) {\n  var deleteBtn, deleteNotification;\n\n  if (options.deletable === void 0 || options.deletable !== false) {\n    deleteBtn = el.querySelector(\".delete\");\n\n    deleteNotification = function deleteNotification(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      el.parentNode.removeChild(el);\n    };\n  }\n\n  if (status === \"show\") {\n    sgds.removeClass(el, \"is-hidden\");\n    sgds.click(deleteBtn, deleteNotification);\n  } else if (status === \"hide\") {\n    sgds.addClass(el, \"is-hidden\");\n  } else if (status === \"toggle\") {\n    if (sgds.isVisible(el)) {\n      sgds.notification(el, \"hide\", options);\n    } else {\n      sgds.notification(el, \"show\", options);\n    }\n\n    return;\n  }\n};\n\nsgds.toggleModal = function (el, options) {\n  if (!options.target) {\n    throw new Error(\"Found [sgds-MODAL] but there is no target defined!\");\n  }\n\n  el.addEventListener(\"click\", function (e) {\n    var backdrop, closeBtn, _closeModal, modal;\n\n    e.preventDefault();\n    e.stopPropagation();\n    modal = document.getElementById(options.target);\n    backdrop = modal.querySelector(\".sgds-modal-background\");\n    closeBtn = modal.querySelector(\".sgds-modal-close\");\n\n    _closeModal = function closeModal() {\n      if (sgds.hasClass(modal, \"is-active\")) {\n        sgds.removeClass(modal, \"is-active\");\n        return sgds.unclick(this, _closeModal);\n      }\n    };\n\n    if (options.closeByBackdrop === void 0 || options.closeByBackdrop) {\n      sgds.click(backdrop, _closeModal);\n    }\n\n    if (options.closeByButton === void 0 || options.closeByButton) {\n      sgds.click(closeBtn, _closeModal);\n    }\n\n    sgds.addClass(modal, \"is-active\");\n  });\n};\n\nsgds.toggleMenu = function (el, options) {\n  sgds.collapseMenu(el, \"hide\");\n  sgds.click(el, function (e) {\n    var active, actives, i, len;\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (options.single) {\n      actives = menu.querySelectorAll(\".is-active\");\n\n      for (i = 0, len = actives.length; i < len; i++) {\n        active = actives[i];\n\n        if (active !== e.target) {\n          sgds.removeClass(active, \"is-active\");\n\n          if (active.nextElementSibling.nodeName === \"UL\") {\n            sgds.hide(active.nextElementSibling);\n          }\n        }\n      }\n    }\n\n    sgds.collapseMenu(e.target, \"toggle\");\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (sgds);\n\n//# sourceURL=webpack:///./sgds/js/sgds.js?");

/***/ }),

/***/ "./sgds/sass/sgds.scss":
/*!*****************************!*\
  !*** ./sgds/sass/sgds.scss ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./sgds/sass/sgds.scss?");

/***/ })

/******/ });